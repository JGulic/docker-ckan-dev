FROM openknowledge/ckan-dev:2.8

MAINTAINER Datopian

RUN echo 'Installing extensions' && \
    # Pages
    pip install --no-cache-dir -e git+https://github.com/keitaroinc/ckanext-pages.git@pages-ckan-2.8#egg=ckanext-pages && \
    # Datopian Data Explorer which is fork of Keitaro's one.
    pip install --no-cache-dir -e git+https://github.com/datopian/ckanext-dataexplorer.git#egg=ckanext-dataexplorer && \
    pip install --no-cache-dir -r https://raw.githubusercontent.com/datopian/ckanext-dataexplorer/master/requirements.txt && \
    # Install scheming extension from a pull request that contains fix for retaining "extra" fields for package
    pip install --no-cache-dir -e git+https://github.com/ckan/ckanext-scheming.git@refs/pull/229/head#egg=ckanext-scheming && \
    pip install --no-cache-dir -r https://raw.githubusercontent.com/ckan/ckanext-scheming/master/requirements.txt && \
    pip install --no-cache-dir -e git+https://github.com/open-data/ckanext-repeating.git#egg=ckanext-repeating && \
    pip install --no-cache-dir -e git+https://github.com/EnviDat/ckanext-composite.git#egg=ckanext-composite && \
    # Install 'restricted' extension from our fork that has been aligned for our use case
    pip install --no-cache-dir -e git+https://github.com/anuveyatsu/ckanext-restricted.git#egg=ckanext-restricted

# Apply patches
COPY patches ${APP_DIR}/patches

RUN for d in $APP_DIR/patches/*; do \
        for f in `ls $d/*.patch | sort -g`; do \
		    cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
        done ; \
    done

# Copy config files
#COPY crontabs/* /etc/crontabs/
COPY docker-entrypoint.d/* /docker-entrypoint.d/
COPY supervisor.d/* /etc/supervisord.d/
#COPY token.dat $APP_DIR/token.dat
COPY credentials.json $APP_DIR/credentials.json
